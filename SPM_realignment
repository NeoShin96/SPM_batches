%%Required: MatLab, SPM12, fMRI data, and sMRI data (for later steps)
%%Realignment of fMRI (Step 1, after you do slice-timing)
%%Only have folder with all fMRI data, not folder with subfolders. That requires different dir coding.
%%%If you have not noticed, this is is a for-loop for multiple subjects (single 4D NIFTI file per subj.) in one folder.
%%%It is different from folder with subfolders of subjects.
%%%Make sure to keep at least one copy of raw data in a separate folder, just in case

function Realignment_Batch()

%%Files in folder must contain fMRI with .nii. Note that it only specifies
%%files with *.nii, so please be careful.
%%%%%%%%%%Before use, check fMRI_path and matlabbatch...mkdir

fMRI_path = uigetdir(pwd,'Select the folder with only raw fMRI files');
%fMRI_path = '/the/directory/with/all/the/raw/fMRI/tiles';

cd(fMRI_path)

%%Get the files
fMRI_data_files = dir(fullfile('*.nii'));
%disp(fMRI_fMRI_data_files)

%%Total number of files in folder
N = length(fMRI_data_files);

disp("This is the number of files with *.nii")
disp(N)
disp("Now showing files")
    
spm_jobman('initcfg');
spm('defaults','FMRI');

for i = 1:N

    baseFileName = fMRI_data_files(i).name;
    %zFileName = fullfile(baseFileName);
    %disp(zFileName);

    fnms{1,:} = [fMRI_path, filesep, baseFileName];

    %%Display the name of the subject
    %subject_ID = zFileName(1:10);
    %disp(subject_ID);
    xsubjects = ['Now pre-processing[Alignment]: Subject ', subject_ID, '. Subject ', num2str(i),' out of ', num2str(N), ' Subjects.'];
    disp('===================================================================================')
    disp(xsubjects)
    disp('===================================================================================')
    disp(fMRI_data_files(i))
  
    matlabbatch{1}.spm.util.exp_frames.files = (fnms);
    matlabbatch{1}.spm.util.exp_frames.frames = Inf;
    matlabbatch{2}.spm.spatial.realign.estwrite.data{1}(1) = cfg_dep('Expand image frames: Expanded filename list.', substruct('.','val', '{}',{1}, '.','val', '{}',{1}, '.','val', '{}',{1}), substruct('.','files'));
    matlabbatch{2}.spm.spatial.realign.estwrite.eoptions.quality = 0.9;
    matlabbatch{2}.spm.spatial.realign.estwrite.eoptions.sep = 4;
    matlabbatch{2}.spm.spatial.realign.estwrite.eoptions.fwhm = 5;
    matlabbatch{2}.spm.spatial.realign.estwrite.eoptions.rtm = 0;
    matlabbatch{2}.spm.spatial.realign.estwrite.eoptions.interp = 2;
    matlabbatch{2}.spm.spatial.realign.estwrite.eoptions.wrap = [0 0 0];
    matlabbatch{2}.spm.spatial.realign.estwrite.eoptions.weight = '';
    matlabbatch{2}.spm.spatial.realign.estwrite.roptions.which = [2 1];
    matlabbatch{2}.spm.spatial.realign.estwrite.roptions.interp = 4;
    matlabbatch{2}.spm.spatial.realign.estwrite.roptions.wrap = [0 0 0];
    matlabbatch{2}.spm.spatial.realign.estwrite.roptions.mask = 1;
    matlabbatch{2}.spm.spatial.realign.estwrite.roptions.prefix = 'r';
    %%confirm the directory
    matlabbatch{3}.cfg_basicio.file_dir.dir_ops.cfg_mkdir.parent = {fMRI_path};
    %%Confirm the directory name for the rp_file step
    matlabbatch{3}.cfg_basicio.file_dir.dir_ops.cfg_mkdir.name = 'R';
    matlabbatch{4}.cfg_basicio.file_dir.file_ops.file_move.files(1) = cfg_dep('Realign: Estimate & Reslice: Realignment Param File (Sess 1)', substruct('.','val', '{}',{2}, '.','val', '{}',{1}, '.','val', '{}',{1}, '.','val', '{}',{1}), substruct('.','sess', '()',{1}, '.','rpfile'));
    matlabbatch{4}.cfg_basicio.file_dir.file_ops.file_move.files(2) = cfg_dep('Realign: Estimate & Reslice: Resliced Images (Sess 1)', substruct('.','val', '{}',{2}, '.','val', '{}',{1}, '.','val', '{}',{1}, '.','val', '{}',{1}), substruct('.','sess', '()',{1}, '.','rfiles'));
    matlabbatch{4}.cfg_basicio.file_dir.file_ops.file_move.files(3) = cfg_dep('Realign: Estimate & Reslice: Mean Image', substruct('.','val', '{}',{2}, '.','val', '{}',{1}, '.','val', '{}',{1}, '.','val', '{}',{1}), substruct('.','rmean'));
    matlabbatch{4}.cfg_basicio.file_dir.file_ops.file_move.action.moveto(1) = cfg_dep('Make Directory: Make Directory ''R''', substruct('.','val', '{}',{3}, '.','val', '{}',{1}, '.','val', '{}',{1}, '.','val', '{}',{1}), substruct('.','dir'));
    
    %%If error pops up, it will show on this file
    save spm_realignmenttest matlabbatch;
    spm_jobman('run', matlabbatch);
    
    %%Goes the R directory that contains rp_file
    R_directory = [fMRI_path, filesep, 'R'];
    cd(R_directory)
    rp_file = dir(['rp_',subject_ID,'*.txt']);
    
    %%Loads the rp file to create a figure
    rp = spm_load(rp_file.name);
    h = figure;
    subplot(2,1,1);plot(rp(:,1:3));
    set(gca,'xlim',[0 size(rp,1)+1]);
    subplot(2,1,2);plot(rp(:,4:6));
    set(gca,'xlim',[0 size(rp,1)+1]);
    my_file_name = ['motion', subject_ID, '.pdf']; % feel free to choose another extension
    %saving_name = strcat(subject_ID, my_file_name);
    saveas(h,my_file_name)
    
    %{
    %%This is not necessary if you use the rp to create figure
    %%Only works if you open up spm fmri before running script; otherwise comment it out
    %%Saves the graphical data that is loaded onto the graphic window as a postscript figuure
    %%Selects the graphical data spm_...ps and rename it
    files = dir('spm*.ps');
    [~, f,ext] = fileparts(files.name);
    rename = strcat(subject_ID,f,ext) ; 
    movefile(files.name, rename); 
    %}
    
end

disp('All done!')
